memberSearchIndex = [{"p":"com.example.maritimemetrics.service","c":"MaritimeMetricStatisticsService","l":"calculateBelowZeroFrequency(String)","u":"calculateBelowZeroFrequency(java.lang.String)"},{"p":"com.example.maritimemetrics.service","c":"MaritimeMetricStatisticsService","l":"calculateMedianSpeedDifference(String)","u":"calculateMedianSpeedDifference(java.lang.String)"},{"p":"com.example.maritimemetrics.service","c":"MaritimeMetricStatisticsService","l":"calculateMissingFrequency(String)","u":"calculateMissingFrequency(java.lang.String)"},{"p":"com.example.maritimemetrics.service","c":"MaritimeMetricStatisticsService","l":"calculateOutlierFrequency(String)","u":"calculateOutlierFrequency(java.lang.String)"},{"p":"com.example.maritimemetrics.service","c":"MaritimeMetricStatisticsService","l":"calculateValidityMetrics(String)","u":"calculateValidityMetrics(java.lang.String)"},{"p":"com.example.maritimemetrics.service","c":"MaritimeMetricStatisticsService","l":"compareVesselSpeedMedians(String, String)","u":"compareVesselSpeedMedians(java.lang.String,java.lang.String)"},{"p":"com.example.maritimemetrics.dto","c":"ErrorResponse","l":"ErrorResponse(LocalDateTime, String, String)","u":"%3Cinit%3E(java.time.LocalDateTime,java.lang.String,java.lang.String)"},{"p":"com.example.maritimemetrics.repository","c":"MaritimeMetricRepository","l":"findAllByVesselCode(String)","u":"findAllByVesselCode(java.lang.String)"},{"p":"com.example.maritimemetrics.repository","c":"MaritimeMetricRepository","l":"findAllByVesselCodeAndIsBelowZeroTrue(String)","u":"findAllByVesselCodeAndIsBelowZeroTrue(java.lang.String)"},{"p":"com.example.maritimemetrics.repository","c":"MaritimeMetricRepository","l":"findAllByVesselCodeAndIsInvalidFalse(String)","u":"findAllByVesselCodeAndIsInvalidFalse(java.lang.String)"},{"p":"com.example.maritimemetrics.repository","c":"MaritimeMetricRepository","l":"findAllByVesselCodeAndIsInvalidTrue(String)","u":"findAllByVesselCodeAndIsInvalidTrue(java.lang.String)"},{"p":"com.example.maritimemetrics.repository","c":"MaritimeMetricRepository","l":"findAllByVesselCodeAndIsMissingTrue(String)","u":"findAllByVesselCodeAndIsMissingTrue(java.lang.String)"},{"p":"com.example.maritimemetrics.repository","c":"MaritimeMetricRepository","l":"findAllByVesselCodeAndIsOutlierTrue(String)","u":"findAllByVesselCodeAndIsOutlierTrue(java.lang.String)"},{"p":"com.example.maritimemetrics.repository","c":"MaritimeMetricRepository","l":"findAllVesselCodes()"},{"p":"com.example.maritimemetrics.repository","c":"MaritimeMetricRepository","l":"findFuelOutliersByVesselCode(String, double)","u":"findFuelOutliersByVesselCode(java.lang.String,double)"},{"p":"com.example.maritimemetrics.repository","c":"MaritimeMetricRepository","l":"findMetricsByVesselCodeAndDatetimeBetween(String, LocalDateTime, LocalDateTime)","u":"findMetricsByVesselCodeAndDatetimeBetween(java.lang.String,java.time.LocalDateTime,java.time.LocalDateTime)"},{"p":"com.example.maritimemetrics.repository","c":"MaritimeMetricRepository","l":"findSpeedDifferencesByVesselCode(String)","u":"findSpeedDifferencesByVesselCode(java.lang.String)"},{"p":"com.example.maritimemetrics.repository","c":"MaritimeMetricRepository","l":"findSpeedOutliersByVesselCode(String, double)","u":"findSpeedOutliersByVesselCode(java.lang.String,double)"},{"p":"com.example.maritimemetrics.controller","c":"MaritimeMetricController","l":"getAllBelowZeroDataByVesselCode(String)","u":"getAllBelowZeroDataByVesselCode(java.lang.String)"},{"p":"com.example.maritimemetrics.controller","c":"MaritimeMetricController","l":"getAllData()"},{"p":"com.example.maritimemetrics.controller","c":"MaritimeMetricController","l":"getAllInvalidDataByVesselCode(String)","u":"getAllInvalidDataByVesselCode(java.lang.String)"},{"p":"com.example.maritimemetrics.controller","c":"MaritimeMetricController","l":"getAllMissingDataByVesselCode(String)","u":"getAllMissingDataByVesselCode(java.lang.String)"},{"p":"com.example.maritimemetrics.controller","c":"MaritimeMetricController","l":"getAllOutlierDataByVesselCode(String)","u":"getAllOutlierDataByVesselCode(java.lang.String)"},{"p":"com.example.maritimemetrics.controller","c":"MaritimeMetricController","l":"getAllValidDataByVesselCode(String)","u":"getAllValidDataByVesselCode(java.lang.String)"},{"p":"com.example.maritimemetrics.controller","c":"MaritimeMetricController","l":"getAllVesselCodes()"},{"p":"com.example.maritimemetrics.service","c":"MaritimeMetricStatisticsService","l":"getConsecutiveProblematicGroups(String, String)","u":"getConsecutiveProblematicGroups(java.lang.String,java.lang.String)"},{"p":"com.example.maritimemetrics.controller","c":"MaritimeMetricController","l":"getFuelOutliers(String, double)","u":"getFuelOutliers(java.lang.String,double)"},{"p":"com.example.maritimemetrics.service","c":"MaritimeMetricStatisticsService","l":"getFuelOutliers(String, double)","u":"getFuelOutliers(java.lang.String,double)"},{"p":"com.example.maritimemetrics.controller","c":"MaritimeMetricController","l":"getMedianSpeedDifference(String, String)","u":"getMedianSpeedDifference(java.lang.String,java.lang.String)"},{"p":"com.example.maritimemetrics.controller","c":"MaritimeMetricController","l":"getMetricsForVesselInPeriod(String, String, String)","u":"getMetricsForVesselInPeriod(java.lang.String,java.lang.String,java.lang.String)"},{"p":"com.example.maritimemetrics.controller","c":"MaritimeMetricController","l":"getProblematicGroups(String, String)","u":"getProblematicGroups(java.lang.String,java.lang.String)"},{"p":"com.example.maritimemetrics.service","c":"MaritimeMetricStatisticsService","l":"getProblemFrequenciesAndValidityMetrics(String)","u":"getProblemFrequenciesAndValidityMetrics(java.lang.String)"},{"p":"com.example.maritimemetrics.controller","c":"MaritimeMetricController","l":"getProblemFrequenciesSorted(String)","u":"getProblemFrequenciesSorted(java.lang.String)"},{"p":"com.example.maritimemetrics.controller","c":"MaritimeMetricController","l":"getSpeedDifferencesByVesselCode(String)","u":"getSpeedDifferencesByVesselCode(java.lang.String)"},{"p":"com.example.maritimemetrics.controller","c":"MaritimeMetricController","l":"getSpeedOutliers(String, double)","u":"getSpeedOutliers(java.lang.String,double)"},{"p":"com.example.maritimemetrics.service","c":"MaritimeMetricStatisticsService","l":"getSpeedOutliers(String, double)","u":"getSpeedOutliers(java.lang.String,double)"},{"p":"com.example.maritimemetrics.exception","c":"GlobalExceptionHandler","l":"GlobalExceptionHandler()","u":"%3Cinit%3E()"},{"p":"com.example.maritimemetrics.exception","c":"GlobalExceptionHandler","l":"handleGenericException(Exception)","u":"handleGenericException(java.lang.Exception)"},{"p":"com.example.maritimemetrics.exception","c":"GlobalExceptionHandler","l":"handleIllegalArgumentException(IllegalArgumentException)","u":"handleIllegalArgumentException(java.lang.IllegalArgumentException)"},{"p":"com.example.maritimemetrics.exception","c":"GlobalExceptionHandler","l":"handleResourceNotFoundException(ResourceNotFoundException)","u":"handleResourceNotFoundException(com.example.maritimemetrics.exception.ResourceNotFoundException)"},{"p":"com.example.maritimemetrics.exception","c":"GlobalExceptionHandler","l":"handleTypeMismatchException(MethodArgumentTypeMismatchException)","u":"handleTypeMismatchException(org.springframework.web.method.annotation.MethodArgumentTypeMismatchException)"},{"p":"com.example.maritimemetrics.controller","c":"MaritimeMetricCsvController","l":"importCsv(MultipartFile)","u":"importCsv(org.springframework.web.multipart.MultipartFile)"},{"p":"com.example.maritimemetrics.service","c":"MaritimeMetricCsvService","l":"importDataFromCsv(MultipartFile)","u":"importDataFromCsv(org.springframework.web.multipart.MultipartFile)"},{"p":"com.example.maritimemetrics","c":"MaritimeMetricsApplication","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"com.example.maritimemetrics.model","c":"MaritimeMetric","l":"MaritimeMetric()","u":"%3Cinit%3E()"},{"p":"com.example.maritimemetrics.controller","c":"MaritimeMetricController","l":"MaritimeMetricController()","u":"%3Cinit%3E()"},{"p":"com.example.maritimemetrics.controller","c":"MaritimeMetricCsvController","l":"MaritimeMetricCsvController()","u":"%3Cinit%3E()"},{"p":"com.example.maritimemetrics.service","c":"MaritimeMetricCsvService","l":"MaritimeMetricCsvService()","u":"%3Cinit%3E()"},{"p":"com.example.maritimemetrics","c":"MaritimeMetricsApplication","l":"MaritimeMetricsApplication()","u":"%3Cinit%3E()"},{"p":"com.example.maritimemetrics.service","c":"MaritimeMetricStatisticsService","l":"MaritimeMetricStatisticsService()","u":"%3Cinit%3E()"},{"p":"com.example.maritimemetrics.dto","c":"MetricSummaryDTO","l":"MetricSummaryDTO(Double, Double, Double, Double, Double, Double)","u":"%3Cinit%3E(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)"},{"p":"com.example.maritimemetrics.exception","c":"ResourceNotFoundException","l":"ResourceNotFoundException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.example.maritimemetrics.dto","c":"SpeedDifferenceDTO","l":"setSpeedDifference(double)"},{"p":"com.example.maritimemetrics.dto","c":"SpeedDifferenceDTO","l":"SpeedDifferenceDTO(Double, Double, Double)","u":"%3Cinit%3E(java.lang.Double,java.lang.Double,java.lang.Double)"}];updateSearchResults();