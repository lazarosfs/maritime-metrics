plugins {
	id 'java'
	id 'application'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.withType(Javadoc).configureEach {
	options.encoding = 'UTF-8' // Set the encoding to UTF-8
	options.classpath += project.files(sourceSets.main.output) // Include classpath
	options.windowTitle = 'Maritime Metrics' // Set a window title
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.build {
	dependsOn javadoc // Ensures Javadocs are built whenever you run 'build'
}
